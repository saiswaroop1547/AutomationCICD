<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="7" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-23T12:09:27 EST" name="Suite" finished-at="2025-01-23T12:10:08 EST" duration-ms="40695">
    <groups>
      <group name="ErrorHandling">
        <method signature="ErrorValidationTest.loginErrorValid()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.ErrorValidationTest@52f27fbd]" name="loginErrorValid" class="Selenium.SeleniumFrameworkDesign.t.ErrorValidationTest"/>
      </group> <!-- ErrorHandling -->
      <group name="OrderAProduct">
        <method signature="StandaloneTest.Order(java.util.HashMap)[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.StandaloneTest@17f62e33]" name="Order" class="Selenium.SeleniumFrameworkDesign.t.StandaloneTest"/>
      </group> <!-- OrderAProduct -->
    </groups>
    <test started-at="2025-01-23T12:09:27 EST" name="Error Validtion test" finished-at="2025-01-23T12:09:59 EST" duration-ms="31529">
      <class name="Selenium.SeleniumFrameworkDesign.t.ErrorValidationTest">
        <test-method is-config="true" signature="launchAppliction()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.ErrorValidationTest@52f27fbd]" started-at="2025-01-23T12:09:27 EST" name="launchAppliction" finished-at="2025-01-23T12:09:36 EST" duration-ms="8079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchAppliction -->
        <test-method retried="true" signature="loginErrorValid()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.ErrorValidationTest@52f27fbd]" started-at="2025-01-23T12:09:36 EST" name="loginErrorValid" finished-at="2025-01-23T12:09:37 EST" duration-ms="1688" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at Selenium.SeleniumFrameworkDesign.t.ErrorValidationTest.loginErrorValid(ErrorValidationTest.java:24)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValid -->
        <test-method is-config="true" signature="closeMeth()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.ErrorValidationTest@52f27fbd]" started-at="2025-01-23T12:09:37 EST" name="closeMeth" finished-at="2025-01-23T12:09:38 EST" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeMeth -->
        <test-method is-config="true" signature="launchAppliction()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.ErrorValidationTest@52f27fbd]" started-at="2025-01-23T12:09:38 EST" name="launchAppliction" finished-at="2025-01-23T12:09:43 EST" duration-ms="4938" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchAppliction -->
        <test-method signature="loginErrorValid()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.ErrorValidationTest@52f27fbd]" started-at="2025-01-23T12:09:43 EST" name="loginErrorValid" finished-at="2025-01-23T12:09:44 EST" duration-ms="1373" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email password.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at Selenium.SeleniumFrameworkDesign.t.ErrorValidationTest.loginErrorValid(ErrorValidationTest.java:24)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValid -->
        <test-method is-config="true" signature="closeMeth()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.ErrorValidationTest@52f27fbd]" started-at="2025-01-23T12:09:45 EST" name="closeMeth" finished-at="2025-01-23T12:09:45 EST" duration-ms="550" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeMeth -->
        <test-method is-config="true" signature="launchAppliction()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.ErrorValidationTest@52f27fbd]" started-at="2025-01-23T12:09:45 EST" name="launchAppliction" finished-at="2025-01-23T12:09:48 EST" duration-ms="3229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchAppliction -->
        <test-method signature="prodErrValid()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.ErrorValidationTest@52f27fbd]" started-at="2025-01-23T12:09:48 EST" name="prodErrValid" finished-at="2025-01-23T12:09:58 EST" duration-ms="9622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prodErrValid -->
        <test-method is-config="true" signature="closeMeth()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.ErrorValidationTest@52f27fbd]" started-at="2025-01-23T12:09:58 EST" name="closeMeth" finished-at="2025-01-23T12:09:59 EST" duration-ms="693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeMeth -->
      </class> <!-- Selenium.SeleniumFrameworkDesign.t.ErrorValidationTest -->
    </test> <!-- Error Validtion test -->
    <test started-at="2025-01-23T12:09:27 EST" name="submit order test" finished-at="2025-01-23T12:10:08 EST" duration-ms="40695">
      <class name="Selenium.SeleniumFrameworkDesign.t.StandaloneTest">
        <test-method is-config="true" signature="launchAppliction()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.StandaloneTest@17f62e33]" started-at="2025-01-23T12:09:28 EST" name="launchAppliction" finished-at="2025-01-23T12:09:36 EST" duration-ms="7684" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchAppliction -->
        <test-method signature="Order(java.util.HashMap)[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.StandaloneTest@17f62e33]" started-at="2025-01-23T12:09:36 EST" name="Order" data-provider="getData" finished-at="2025-01-23T12:09:45 EST" duration-ms="9594" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ProName=IPHONE 13 PRO, password=Test@123, email=swaroop@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Order -->
        <test-method is-config="true" signature="closeMeth()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.StandaloneTest@17f62e33]" started-at="2025-01-23T12:09:45 EST" name="closeMeth" finished-at="2025-01-23T12:09:46 EST" duration-ms="657" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeMeth -->
        <test-method is-config="true" signature="launchAppliction()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.StandaloneTest@17f62e33]" started-at="2025-01-23T12:09:46 EST" name="launchAppliction" finished-at="2025-01-23T12:09:51 EST" duration-ms="5174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchAppliction -->
        <test-method signature="Order(java.util.HashMap)[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.StandaloneTest@17f62e33]" started-at="2025-01-23T12:09:51 EST" name="Order" data-provider="getData" finished-at="2025-01-23T12:10:01 EST" duration-ms="9438" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{ProName=QWERTY, password=Test@123, email=saiswaroop@gmail.com}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Order -->
        <test-method is-config="true" signature="closeMeth()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.StandaloneTest@17f62e33]" started-at="2025-01-23T12:10:01 EST" name="closeMeth" finished-at="2025-01-23T12:10:01 EST" duration-ms="449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeMeth -->
        <test-method is-config="true" signature="launchAppliction()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.StandaloneTest@17f62e33]" started-at="2025-01-23T12:10:01 EST" name="launchAppliction" finished-at="2025-01-23T12:10:06 EST" duration-ms="4748" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchAppliction -->
        <test-method signature="OrderHistoryCheck()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.StandaloneTest@17f62e33]" started-at="2025-01-23T12:10:06 EST" name="OrderHistoryCheck" finished-at="2025-01-23T12:10:08 EST" depends-on-methods="Selenium.SeleniumFrameworkDesign.t.StandaloneTest.Order" duration-ms="1345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderHistoryCheck -->
        <test-method is-config="true" signature="closeMeth()[pri:0, instance:Selenium.SeleniumFrameworkDesign.t.StandaloneTest@17f62e33]" started-at="2025-01-23T12:10:08 EST" name="closeMeth" finished-at="2025-01-23T12:10:08 EST" duration-ms="294" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeMeth -->
      </class> <!-- Selenium.SeleniumFrameworkDesign.t.StandaloneTest -->
    </test> <!-- submit order test -->
  </suite> <!-- Suite -->
</testng-results>
